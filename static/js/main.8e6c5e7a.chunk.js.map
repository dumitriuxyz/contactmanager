{"version":3,"sources":["context.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","branding","className","href","Link","to","defaultProps","About","class","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","email","phone","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","_this$props$contact","onClick","style","cursor","float","color","marginRight","Contacts","Fragment","contacts_Contact","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kTAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GACRe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJ5Ce,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EASsBC,IAAMC,IAAI,8CAThC,OASUN,EATVE,EAAAK,KAWI9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OAXlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAeI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAjBpBzC,EAAA,CAA8B0C,aAuBjBC,EAAW5D,EAAQ4D,iBCpD1BC,EAAS,SAAAJ,GAAS,IACdK,EAAaL,EAAbK,SACR,OACEP,EAAAb,EAAAc,cAAA,OAAKO,UAAU,2DACbR,EAAAb,EAAAc,cAAA,OAAKO,UAAU,aACbR,EAAAb,EAAAc,cAAA,KAAGQ,KAAK,IAAID,UAAU,gBACnBD,GAEHP,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIO,UAAU,sBACZR,EAAAb,EAAAc,cAAA,MAAIO,UAAU,YACZR,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,YACrBR,EAAAb,EAAAc,cAAA,KAAGO,UAAU,gBADf,UAIFR,EAAAb,EAAAc,cAAA,MAAIO,UAAU,YACZR,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAG,eAAeH,UAAU,YAChCR,EAAAb,EAAAc,cAAA,KAAGO,UAAU,gBADf,SAIFR,EAAAb,EAAAc,cAAA,MAAIO,UAAU,YACZR,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,YAC1BR,EAAAb,EAAAc,cAAA,KAAGO,UAAU,oBADf,gBAWdF,EAAOM,aAAe,CACpBL,SAAU,UAMGD,QC/BAO,EAVD,WACZ,OACEb,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIO,UAAU,aAAd,yBACAR,EAAAb,EAAAc,cAAA,KAAGa,MAAM,QAAT,iCACAd,EAAAb,EAAAc,cAAA,KAAGO,UAAU,kBAAb,4CCHAO,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAC,EAMIF,EANJE,KACAnC,EAKIiC,EALJjC,MACAoC,EAIIH,EAJJG,YACApE,EAGIiE,EAHJjE,KACAqE,EAEIJ,EAFJI,SACAC,EACIL,EADJK,MAEA,OACErB,EAAAb,EAAAc,cAAA,OAAKO,UAAU,cACbR,EAAAb,EAAAc,cAAA,SAAOqB,QAASJ,GAAOD,GACvBjB,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACNmE,KAAMA,EACNV,UAAWe,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbpC,MAAOA,EACPqC,SAAUA,IAEXC,GAASrB,EAAAb,EAAAc,cAAA,OAAKO,UAAU,oBAAoBa,KAenDN,EAAeH,aAAe,CAC5B7D,KAAM,OACNsE,MAAO,IAGMN,QC4DAU,6MApGb5E,MAAQ,CACNqE,KAAM,GACNQ,MAAO,GACPC,MAAO,GACPC,OAAQ,MAGVR,SAAW,SAAAS,GAAC,OAAIhE,EAAKc,SAAL3B,OAAA8E,EAAA,EAAA9E,CAAA,GAAiB6E,EAAEE,OAAOb,KAAOW,EAAEE,OAAOhD,WAE1DiD,+CAAW,SAAA3C,EAAOX,EAAUmD,GAAjB,IAAAI,EAAAf,EAAAQ,EAAAC,EAAAO,EAAA5C,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTmC,EAAEM,iBADOF,EAGsBpE,EAAKhB,MAA5BqE,EAHCe,EAGDf,KAAMQ,EAHLO,EAGKP,MAAOC,EAHZM,EAGYN,MAER,KAATT,EALK,CAAA1B,EAAAE,KAAA,eAMP7B,EAAKc,SAAS,CAAEiD,OAAQ,CAAEV,KAAM,sBANzB1B,EAAA4C,OAAA,oBASK,KAAVV,EATK,CAAAlC,EAAAE,KAAA,eAUP7B,EAAKc,SAAS,CAAEiD,OAAQ,CAAEF,MAAO,uBAV1BlC,EAAA4C,OAAA,oBAaK,KAAVT,EAbK,CAAAnC,EAAAE,KAAA,gBAcP7B,EAAKc,SAAS,CAAEiD,OAAQ,CAAED,MAAO,uBAd1BnC,EAAA4C,OAAA,yBAkBHF,EAAa,CACjBhB,OACAQ,QACAC,SArBOnC,EAAAE,KAAA,GAwBSC,IAAM0C,KACtB,6CACAH,GA1BO,QAwBH5C,EAxBGE,EAAAK,KA6BTnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAE7CjC,EAAKc,SAAS,CACZuC,KAAM,GACNQ,MAAO,GACPC,MAAO,GACPC,OAAQ,KAGV/D,EAAKqC,MAAMoC,QAAQC,KAAK,KAtCf,yBAAA/C,EAAAO,SAAAV,EAAAtB,yIAyCF,IAAAyE,EAAAzE,KAAA0E,EACgC1E,KAAKlB,MAApCqE,EADDuB,EACCvB,KAAMQ,EADPe,EACOf,MAAOC,EADdc,EACcd,MAAOC,EADrBa,EACqBb,OAE5B,OACE5B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKO,UAAU,aACbR,EAAAb,EAAAc,cAAA,OAAKO,UAAU,eAAf,eACAR,EAAAb,EAAAc,cAAA,OAAKO,UAAU,aACbR,EAAAb,EAAAc,cAAA,QAAM+B,SAAUQ,EAAKR,SAASU,KAAKF,EAAM9D,IACvCsB,EAAAb,EAAAc,cAAC0C,EAAD,CACE1B,MAAM,OACNC,KAAK,OACLC,YAAY,gBACZpC,MAAOmC,EACPE,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOV,OAEhBlB,EAAAb,EAAAc,cAAC0C,EAAD,CACE1B,MAAM,QACNC,KAAK,QACLnE,KAAK,QACLoE,YAAY,iBACZpC,MAAO2C,EACPN,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOF,QAEhB1B,EAAAb,EAAAc,cAAC0C,EAAD,CACE1B,MAAM,QACNC,KAAK,QACLC,YAAY,iBACZpC,MAAO4C,EACPP,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOD,QAEhB3B,EAAAb,EAAAc,cAAA,UAAQlD,KAAK,SAASyD,UAAU,2BAAhC,2BAxFOJ,aCqHVwC,6MApHb/F,MAAQ,CACNqE,KAAM,GACNQ,MAAO,GACPC,MAAO,GACPC,OAAQ,MAkBVR,SAAW,SAAAS,GAAC,OAAIhE,EAAKc,SAAL3B,OAAA8E,EAAA,EAAA9E,CAAA,GAAiB6E,EAAEE,OAAOb,KAAOW,EAAEE,OAAOhD,WAE1DiD,+CAAW,SAAA3C,EAAOX,EAAUmD,GAAjB,IAAAI,EAAAf,EAAAQ,EAAAC,EAAAkB,EAAAxF,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTmC,EAAEM,iBADOF,EAGsBpE,EAAKhB,MAA5BqE,EAHCe,EAGDf,KAAMQ,EAHLO,EAGKP,MAAOC,EAHZM,EAGYN,MAER,KAATT,EALK,CAAA1B,EAAAE,KAAA,eAMP7B,EAAKc,SAAS,CAAEiD,OAAQ,CAAEV,KAAM,sBANzB1B,EAAA4C,OAAA,oBASK,KAAVV,EATK,CAAAlC,EAAAE,KAAA,eAUP7B,EAAKc,SAAS,CAAEiD,OAAQ,CAAEF,MAAO,uBAV1BlC,EAAA4C,OAAA,oBAaK,KAAVT,EAbK,CAAAnC,EAAAE,KAAA,gBAcP7B,EAAKc,SAAS,CAAEiD,OAAQ,CAAED,MAAO,uBAd1BnC,EAAA4C,OAAA,yBAkBHS,EAAa,CACjB3B,OACAQ,QACAC,SAGMtE,EAAOQ,EAAKqC,MAAM4C,MAAMC,OAAxB1F,GAxBCmC,EAAAE,KAAA,GAyBSC,IAAMqD,IAAN,8CAAAzF,OAC8BF,GAC9CwF,GA3BO,QAyBHvD,EAzBGE,EAAAK,KA8BTnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAEhDjC,EAAKc,SAAS,CACZuC,KAAM,GACNQ,MAAO,GACPC,MAAO,GACPC,OAAQ,KAGV/D,EAAKqC,MAAMoC,QAAQC,KAAK,KAvCf,yBAAA/C,EAAAO,SAAAV,EAAAtB,6QAhBDV,EAAOU,KAAKmC,MAAM4C,MAAMC,OAAxB1F,YACUsC,IAAMC,IAAN,8CAAArC,OAC8BF,WAD1CiC,SAIAlC,EAAUkC,EAAIQ,KAEpB/B,KAAKY,SAAS,CACZuC,KAAM9D,EAAQ8D,KACdQ,MAAOtE,EAAQsE,MACfC,MAAOvE,EAAQuE,2IAgDV,IAAAa,EAAAzE,KAAA0E,EACgC1E,KAAKlB,MAApCqE,EADDuB,EACCvB,KAAMQ,EADPe,EACOf,MAAOC,EADdc,EACcd,MAAOC,EADrBa,EACqBb,OAE5B,OACE5B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKO,UAAU,aACbR,EAAAb,EAAAc,cAAA,OAAKO,UAAU,eAAf,gBACAR,EAAAb,EAAAc,cAAA,OAAKO,UAAU,aACbR,EAAAb,EAAAc,cAAA,QAAM+B,SAAUQ,EAAKR,SAASU,KAAKF,EAAM9D,IACvCsB,EAAAb,EAAAc,cAAC0C,EAAD,CACE1B,MAAM,OACNC,KAAK,OACLC,YAAY,gBACZpC,MAAOmC,EACPE,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOV,OAEhBlB,EAAAb,EAAAc,cAAC0C,EAAD,CACE1B,MAAM,QACNC,KAAK,QACLnE,KAAK,QACLoE,YAAY,iBACZpC,MAAO2C,EACPN,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOF,QAEhB1B,EAAAb,EAAAc,cAAC0C,EAAD,CACE1B,MAAM,QACNC,KAAK,QACLC,YAAY,iBACZpC,MAAO4C,EACPP,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOD,QAEhB3B,EAAAb,EAAAc,cAAA,UAAQlD,KAAK,SAASyD,UAAU,2BAAhC,8BAxGQJ,aCmEX6C,6MAjEbpG,MAAQ,CACNqG,iBAAiB,KAGnBC,oDAAgB,SAAA9D,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,IAAMyD,OAAN,8CAAA7F,OAA2DF,IADnD,OAGdqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAH9B,wBAAAmC,EAAAO,SAAAV,EAAAtB,yIAMP,IAAAyE,EAAAzE,KAAAsF,EAC4BtF,KAAKmC,MAAM9C,QAAtCC,EADDgG,EACChG,GAAI6D,EADLmC,EACKnC,KAAMQ,EADX2B,EACW3B,MAAOC,EADlB0B,EACkB1B,MACjBuB,EAAoBnF,KAAKlB,MAAzBqG,gBACR,OACElD,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKO,UAAU,uBACbR,EAAAb,EAAAc,cAAA,UACGiB,EAAM,IACPlB,EAAAb,EAAAc,cAAA,KACEqD,QAAS,WACPd,EAAK7D,SAAS,CACZuE,iBAAkBV,EAAK3F,MAAMqG,mBAGjC1C,UAAU,mBACV+C,MAAO,CAAEC,OAAQ,aAEnBxD,EAAAb,EAAAc,cAAA,KACEqD,QAASd,EAAKW,cAAcT,KAAKF,EAAMnF,EAAIqB,GAC3C8B,UAAU,eACV+C,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,SAErD1D,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAE,gBAAApD,OAAkBF,IACxB2C,EAAAb,EAAAc,cAAA,KACEO,UAAU,oBACV+C,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPC,YAAa,YAKpBT,EACClD,EAAAb,EAAAc,cAAA,MAAIO,UAAU,cACZR,EAAAb,EAAAc,cAAA,MAAIO,UAAU,mBAAd,UAAwCkB,GACxC1B,EAAAb,EAAAc,cAAA,MAAIO,UAAU,mBAAd,UAAwCmB,IAExC,eArDIvB,aCoBPwD,mLApBX,OACE5D,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACE8C,EAAAb,EAAAc,cAACD,EAAAb,EAAM0E,SAAP,KACE7D,EAAAb,EAAAc,cAAA,MAAIO,UAAU,kBACZR,EAAAb,EAAAc,cAAA,QAAMO,UAAU,eAAhB,WADF,SAGCtD,EAASO,IAAI,SAAAL,GAAO,OACnB4C,EAAAb,EAAAc,cAAC6D,EAAD,CAAShF,IAAK1B,EAAQC,GAAID,QAASA,gBAZ5BgD,aCYR2D,EAbE,WACf,OACE/D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIO,UAAU,kBAAd,aACAR,EAAAb,EAAAc,cAAA,MAAIO,UAAU,QAAd,kBACAR,EAAAb,EAAAc,cAAA,KAAGO,UAAU,QAAb,oCAEER,EAAAb,EAAAc,cAAA,WAFF,IAESD,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAG,KAAT,sBCuBAqD,6MA9BbnH,MAAQ,CACNoH,MAAO,GACPC,KAAM,uFAGY,IAAA1B,EAAAzE,KAClBoG,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtE,GAAI,OAAI0C,EAAK7D,SAAS,CAAEsF,MAAOnE,EAAKmE,MAAOC,KAAMpE,EAAKoE,0CAWvD,IAAAjC,EACiBlE,KAAKlB,MAArBoH,EADDhC,EACCgC,MAAOC,EADRjC,EACQiC,KACf,OACElE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAKgE,GACLjE,EAAAb,EAAAc,cAAA,SAAIiE,WAzBO9D,aCsCJmE,gMAtBX,OACEvE,EAAAb,EAAAc,cAACuE,EAAD,KACExE,EAAAb,EAAAc,cAACwE,EAAA,EAAD,KACEzE,EAAAb,EAAAc,cAAA,OAAKO,UAAU,OACbR,EAAAb,EAAAc,cAACyE,EAAD,CAAQnE,SAAS,oBACjBP,EAAAb,EAAAc,cAAA,OAAKO,UAAU,aACbR,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,KACE3E,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnB,IACjC5D,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWtD,IAC5CzB,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWnC,IACjD5C,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWlE,IACtCb,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWf,IACrChE,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOG,UAAWhB,gBAdhB3D,cCJE4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrC,MACvB,2DCbNsC,IAASC,OAAOrF,EAAAb,EAAAc,cAACqF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.8e6c5e7a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p class=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text',\n  error: ''\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <button type=\"submit\" className=\"btn btn-light btn-block\">\n                    Add Contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <button type=\"submit\" className=\"btn btn-light btn-block\">\n                    Update Contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={() => {\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    });\n                  }}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-4\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4 mb-5\">Error 404</h1>\n      <h2 className=\"mb-3\">Page Not Found</h2>\n      <p className=\"lead\">\n        Sorry, this page does not exists!\n        <br /> <Link to=\"/\">Go Back to Home</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => this.setState({ title: data.title, body: data.body }));\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from './context';\n\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Contacts from './components/contacts/Contacts';\nimport NotFound from './components/pages/NotFound';\n\nimport Test from './components/test/Test';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}